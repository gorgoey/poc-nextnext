{"ast":null,"code":"import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from 'next/app';\nimport Router from 'next/router';\nimport { StoreProvider } from \"../lib/store\";\nimport ThemeProvider from \"../lib/styles/ThemeProvider\";\nimport { AuthProvider } from \"../lib/auth\";\nimport { ErrorProvider } from \"../lib/error\";\nimport { font as fontConfig } from \"../modules/_ui/config\";\nexport default class MyApp extends App {\n  componentDidMount() {\n    const WebFont = require('webfontloader');\n\n    WebFont.load(fontConfig);\n    Router.events.on('routeChangeStart', url => {\n      if (window.__NEXT_DATA__.props.isSSR === undefined) {\n        window.__NEXT_DATA__.props.isSSR = false;\n      }\n    });\n  }\n\n  render() {\n    const {\n      Component,\n      router,\n      pageProps\n    } = this.props;\n    return _jsx(ThemeProvider, {\n      children: _jsx(AuthProvider, {\n        children: _jsx(StoreProvider, {\n          children: _jsx(ErrorProvider, {\n            children: _jsx(Component, _objectSpread(_objectSpread({}, pageProps), {}, {\n              router: router\n            }))\n          })\n        })\n      })\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}