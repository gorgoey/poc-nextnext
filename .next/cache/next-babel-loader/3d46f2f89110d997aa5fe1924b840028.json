{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/lib/api/IfInview.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Waypoint } from 'react-waypoint';\nexport default function IfInview(_ref) {\n  _s();\n\n  var _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? 100 : _ref$offset,\n      children = _ref.children;\n\n  var _useState = useState(false),\n      shouldLoad = _useState[0],\n      setshouldLoad = _useState[1];\n\n  if (shouldLoad === true) {\n    return children;\n  }\n\n  return _jsxDEV(Waypoint, {\n    onEnter: function onEnter() {\n      return setshouldLoad(true);\n    },\n    bottomOffset: \"-\".concat(offset, \"px\"),\n    fireOnRapidScroll: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(IfInview, \"h399qASdCeRAq2drdrLcTQqPujQ=\");\n\n_c = IfInview;\n\nvar _c;\n\n$RefreshReg$(_c, \"IfInview\");","map":{"version":3,"sources":["/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/lib/api/IfInview.js"],"names":["useState","Waypoint","IfInview","offset","children","shouldLoad","setshouldLoad"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,eAAe,SAASC,QAAT,OAA8C;AAAA;;AAAA,yBAA1BC,MAA0B;AAAA,MAA1BA,MAA0B,4BAAjB,GAAiB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBACvBJ,QAAQ,CAAC,KAAD,CADe;AAAA,MACpDK,UADoD;AAAA,MACxCC,aADwC;;AAG3D,MAAID,UAAU,KAAK,IAAnB,EAAyB;AACvB,WAAOD,QAAP;AACD;;AAED,SACE,QAAC,QAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAME,aAAa,CAAC,IAAD,CAAnB;AAAA,KADX;AAEE,IAAA,YAAY,aAAMH,MAAN,OAFd;AAGE,IAAA,iBAAiB,EAAE;AAHrB;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAduBD,Q;;KAAAA,Q","sourcesContent":["import { useState } from 'react'\n\nimport { Waypoint } from 'react-waypoint'\n\nexport default function IfInview({ offset = 100, children }) {\n  const [shouldLoad, setshouldLoad] = useState(false)\n\n  if (shouldLoad === true) {\n    return children\n  }\n\n  return (\n    <Waypoint\n      onEnter={() => setshouldLoad(true)}\n      bottomOffset={`-${offset}px`}\n      fireOnRapidScroll={false}\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}