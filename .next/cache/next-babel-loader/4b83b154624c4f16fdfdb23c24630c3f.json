{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/lib/error/index.js\";\nimport React from 'react';\nimport get from 'lodash/get';\nimport Error404Page from \"../../components/_pages/_error/404\";\nimport Error500Page from \"../../components/_pages/_error/500\";\nexport function withErrorHandling(getServerSideProps) {\n  return async context => {\n    let pageProps = {};\n\n    try {\n      pageProps = await getServerSideProps(context);\n    } catch (error) {\n      console.error(error);\n      const statusCode = get(error, 'response.status', 500);\n      const errorCode = get(error, 'response.errorCode', '');\n\n      if (context.res) {\n        context.res.statusCode = statusCode;\n      }\n\n      pageProps.props = {\n        statusCode,\n        errorCode\n      };\n    }\n\n    return pageProps;\n  };\n}\nexport class ErrorProvider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hasRuntimeError: false,\n      error: {}\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    const errorResponse = get(error, 'response', {});\n    return {\n      hasRuntimeError: true,\n      error: errorResponse\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('Runtime Error:', error, errorInfo);\n  }\n\n  render() {\n    const statusCode = get(this.props.children, 'props.statusCode', 200); // If any runtime error\n\n    if (this.state.hasRuntimeError) {\n      return _jsxDEV(Error500Page, {\n        errorCode: this.state.error.errorCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this);\n    } // If any error\n\n\n    if (statusCode >= 500) {\n      return _jsxDEV(Error500Page, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, this);\n    } // If api path not found\n\n\n    if (statusCode >= 400) {\n      const errorCode = get(this.props, 'errorCode', '');\n      return _jsxDEV(Error404Page, {\n        errorCode: errorCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}","map":{"version":3,"sources":["/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/lib/error/index.js"],"names":["React","get","Error404Page","Error500Page","withErrorHandling","getServerSideProps","context","pageProps","error","console","statusCode","errorCode","res","props","ErrorProvider","Component","state","hasRuntimeError","getDerivedStateFromError","errorResponse","componentDidCatch","errorInfo","render","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAOC,YAAP;AACA,OAAOC,YAAP;AAEA,OAAO,SAASC,iBAAT,CAA2BC,kBAA3B,EAA+C;AACpD,SAAO,MAAMC,OAAN,IAAiB;AACtB,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAI;AACFA,MAAAA,SAAS,GAAG,MAAMF,kBAAkB,CAACC,OAAD,CAApC;AACD,KAFD,CAEE,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AAEA,YAAME,UAAU,GAAGT,GAAG,CAACO,KAAD,EAAQ,iBAAR,EAA2B,GAA3B,CAAtB;AACA,YAAMG,SAAS,GAAGV,GAAG,CAACO,KAAD,EAAQ,oBAAR,EAA8B,EAA9B,CAArB;;AAEA,UAAIF,OAAO,CAACM,GAAZ,EAAiB;AACfN,QAAAA,OAAO,CAACM,GAAR,CAAYF,UAAZ,GAAyBA,UAAzB;AACD;;AAEDH,MAAAA,SAAS,CAACM,KAAV,GAAkB;AAAEH,QAAAA,UAAF;AAAcC,QAAAA;AAAd,OAAlB;AACD;;AAED,WAAOJ,SAAP;AACD,GAnBD;AAoBD;AAED,OAAO,MAAMO,aAAN,SAA4Bd,KAAK,CAACe,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACjDC,KADiD,GACzC;AACNC,MAAAA,eAAe,EAAE,KADX;AAENT,MAAAA,KAAK,EAAE;AAFD,KADyC;AAAA;;AAMjD,SAAOU,wBAAP,CAAgCV,KAAhC,EAAuC;AACrC,UAAMW,aAAa,GAAGlB,GAAG,CAACO,KAAD,EAAQ,UAAR,EAAoB,EAApB,CAAzB;AAEA,WAAO;AACLS,MAAAA,eAAe,EAAE,IADZ;AAELT,MAAAA,KAAK,EAAEW;AAFF,KAAP;AAID;;AAEDC,EAAAA,iBAAiB,CAACZ,KAAD,EAAQa,SAAR,EAAmB;AAClCZ,IAAAA,OAAO,CAACD,KAAR,CAAc,gBAAd,EAAgCA,KAAhC,EAAuCa,SAAvC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMZ,UAAU,GAAGT,GAAG,CAAC,KAAKY,KAAL,CAAWU,QAAZ,EAAsB,kBAAtB,EAA0C,GAA1C,CAAtB,CADO,CAGP;;AACA,QAAI,KAAKP,KAAL,CAAWC,eAAf,EAAgC;AAC9B,aAAO,QAAC,YAAD;AAAc,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWR,KAAX,CAAiBG;AAA1C;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KANM,CAQP;;;AACA,QAAID,UAAU,IAAI,GAAlB,EAAuB;AACrB,aAAO,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAXM,CAaP;;;AACA,QAAIA,UAAU,IAAI,GAAlB,EAAuB;AACrB,YAAMC,SAAS,GAAGV,GAAG,CAAC,KAAKY,KAAN,EAAa,WAAb,EAA0B,EAA1B,CAArB;AACA,aAAO,QAAC,YAAD;AAAc,QAAA,SAAS,EAAEF;AAAzB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,WAAO,KAAKE,KAAL,CAAWU,QAAlB;AACD;;AAvCgD","sourcesContent":["import React from 'react'\nimport get from 'lodash/get'\n\nimport Error404Page from '@components/_pages/_error/404'\nimport Error500Page from '@components/_pages/_error/500'\n\nexport function withErrorHandling(getServerSideProps) {\n  return async context => {\n    let pageProps = {}\n\n    try {\n      pageProps = await getServerSideProps(context)\n    } catch (error) {\n      console.error(error)\n\n      const statusCode = get(error, 'response.status', 500)\n      const errorCode = get(error, 'response.errorCode', '')\n\n      if (context.res) {\n        context.res.statusCode = statusCode\n      }\n\n      pageProps.props = { statusCode, errorCode }\n    }\n\n    return pageProps\n  }\n}\n\nexport class ErrorProvider extends React.Component {\n  state = {\n    hasRuntimeError: false,\n    error: {},\n  }\n\n  static getDerivedStateFromError(error) {\n    const errorResponse = get(error, 'response', {})\n\n    return {\n      hasRuntimeError: true,\n      error: errorResponse,\n    }\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.error('Runtime Error:', error, errorInfo)\n  }\n\n  render() {\n    const statusCode = get(this.props.children, 'props.statusCode', 200)\n\n    // If any runtime error\n    if (this.state.hasRuntimeError) {\n      return <Error500Page errorCode={this.state.error.errorCode} />\n    }\n\n    // If any error\n    if (statusCode >= 500) {\n      return <Error500Page />\n    }\n\n    // If api path not found\n    if (statusCode >= 400) {\n      const errorCode = get(this.props, 'errorCode', '')\n      return <Error404Page errorCode={errorCode} />\n    }\n\n    return this.props.children\n  }\n}\n"]},"metadata":{},"sourceType":"module"}