{"ast":null,"code":"import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers';\nimport { useStores } from \"../store\";\nexport default function Form(_ref) {\n  var children = _ref.children,\n      _ref$defaultValues = _ref.defaultValues,\n      defaultValues = _ref$defaultValues === void 0 ? {} : _ref$defaultValues,\n      schema = _ref.schema,\n      onSubmit = _ref.onSubmit,\n      _ref$onError = _ref.onError,\n      onError = _ref$onError === void 0 ? handleError : _ref$onError;\n\n  var _useStores = useStores(),\n      ErrorStore = _useStores.ErrorStore;\n\n  var _useForm = useForm({\n    defaultValues: defaultValues,\n    resolver: schema ? yupResolver(schema) : null\n  }),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  return _jsx(\"form\", {\n    onSubmit: handleSubmit(function (data) {\n      var response = onSubmit(data);\n\n      if (response && typeof response[\"catch\"] === 'function') {\n        response[\"catch\"](onError(ErrorStore));\n      }\n    }),\n    children: children({\n      register: register,\n      errors: errors\n    })\n  });\n}\n\nfunction handleError(errorStore) {\n  return function (error) {\n    errorStore.addError({\n      title: error.message\n    });\n  };\n}","map":null,"metadata":{},"sourceType":"module"}