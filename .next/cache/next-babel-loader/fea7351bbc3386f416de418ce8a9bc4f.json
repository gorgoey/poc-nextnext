{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nvar defaultTimeout = 10000;\nexport function fetchAPI(_ref) {\n  var _ref$apiUrl = _ref.apiUrl,\n      apiUrl = _ref$apiUrl === void 0 ? process.env.API_URL : _ref$apiUrl,\n      path = _ref.path,\n      token = _ref.token,\n      _ref$timeout = _ref.timeout,\n      timeout = _ref$timeout === void 0 ? defaultTimeout : _ref$timeout,\n      options = _objectWithoutProperties(_ref, [\"apiUrl\", \"path\", \"token\", \"timeout\"]);\n\n  return axios(_objectSpread({\n    baseURL: \"\".concat(apiUrl).concat(path),\n    headers: _objectSpread({}, token && {\n      Authorization: \"Bearer \".concat(token)\n    }),\n    timeout: timeout\n  }, options)).then(function (_ref2) {\n    var data = _ref2.data;\n    return data;\n  });\n}\nexport function postAPI(_ref3) {\n  var _ref3$apiUrl = _ref3.apiUrl,\n      apiUrl = _ref3$apiUrl === void 0 ? process.env.API_URL : _ref3$apiUrl,\n      path = _ref3.path,\n      data = _ref3.data,\n      token = _ref3.token,\n      _ref3$timeout = _ref3.timeout,\n      timeout = _ref3$timeout === void 0 ? defaultTimeout : _ref3$timeout,\n      options = _objectWithoutProperties(_ref3, [\"apiUrl\", \"path\", \"data\", \"token\", \"timeout\"]);\n\n  return axios(_objectSpread({\n    method: 'post',\n    url: \"\".concat(apiUrl).concat(path),\n    headers: _objectSpread({\n      'Content-Type': 'application/json'\n    }, token && {\n      Authorization: \"Bearer \".concat(token)\n    }),\n    data: data,\n    timeout: timeout\n  }, options)).then(function (_ref4) {\n    var data = _ref4.data;\n    return data;\n  });\n}\nexport function fetchGQL(_ref5) {\n  var _ref5$apiURL = _ref5.apiURL,\n      apiURL = _ref5$apiURL === void 0 ? process.env.API_URL : _ref5$apiURL,\n      query = _ref5.query,\n      _ref5$timeout = _ref5.timeout,\n      timeout = _ref5$timeout === void 0 ? defaultTimeout : _ref5$timeout,\n      _ref5$variables = _ref5.variables,\n      variables = _ref5$variables === void 0 ? null : _ref5$variables;\n  return axios({\n    method: 'post',\n    url: apiURL,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    data: {\n      query: query,\n      variables: variables,\n      operationName: null\n    },\n    timeout: timeout\n  }).then(function (_ref6) {\n    var data = _ref6.data;\n    return data;\n  });\n}\nexport function throwError() {\n  var status = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 500;\n\n  var _ref7 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref7$errorCode = _ref7.errorCode,\n      errorCode = _ref7$errorCode === void 0 ? '' : _ref7$errorCode;\n\n  var err = new Error();\n  err.response = {\n    status: status,\n    errorCode: errorCode\n  };\n  throw err;\n}","map":null,"metadata":{},"sourceType":"module"}