{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/lib/styles/ThemeProvider.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport { ThemeProvider as EmotionThemeProvider } from '@emotion/react';\nimport BaseStyles from \"./BaseStyles\";\nimport { breakpoints, variables } from \"../../modules/_ui/config\";\nconst emotionTheme = {\n  breakpoints: Object.keys(breakpoints).map(key => breakpoints[key])\n};\nexport default function ThemeProvider({\n  children\n}) {\n  const {\n    0: isDarkMode,\n    1: setIsDarkMode\n  } = useState(false);\n  const themeMode = isDarkMode ? 'dark' : 'light';\n\n  const toggleTheme = () => setIsDarkMode(!isDarkMode);\n\n  return _jsxDEV(EmotionThemeProvider, {\n    theme: _objectSpread(_objectSpread({}, emotionTheme), {}, {\n      variables: variables[themeMode],\n      themeMode,\n      toggleTheme\n    }),\n    children: [_jsxDEV(BaseStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/lib/styles/ThemeProvider.js"],"names":["useState","ThemeProvider","EmotionThemeProvider","BaseStyles","breakpoints","variables","emotionTheme","Object","keys","map","key","children","isDarkMode","setIsDarkMode","themeMode","toggleTheme"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,aAAa,IAAIC,oBAA1B,QAAsD,gBAAtD;AACA,OAAOC,UAAP;AACA,SAASC,WAAT,EAAsBC,SAAtB;AAEA,MAAMC,YAAY,GAAG;AACnBF,EAAAA,WAAW,EAAEG,MAAM,CAACC,IAAP,CAAYJ,WAAZ,EAAyBK,GAAzB,CAA6BC,GAAG,IAAIN,WAAW,CAACM,GAAD,CAA/C;AADM,CAArB;AAIA,eAAe,SAAST,aAAT,CAAuB;AAAEU,EAAAA;AAAF,CAAvB,EAAqC;AAClD,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMc,SAAS,GAAGF,UAAU,GAAG,MAAH,GAAY,OAAxC;;AAEA,QAAMG,WAAW,GAAG,MAAMF,aAAa,CAAC,CAACD,UAAF,CAAvC;;AAEA,SACE,QAAC,oBAAD;AACE,IAAA,KAAK,kCACAN,YADA;AAEHD,MAAAA,SAAS,EAAEA,SAAS,CAACS,SAAD,CAFjB;AAGHA,MAAAA,SAHG;AAIHC,MAAAA;AAJG,MADP;AAAA,eAOE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAPF,EAQGJ,QARH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD","sourcesContent":["import { useState } from 'react'\nimport { ThemeProvider as EmotionThemeProvider } from '@emotion/react'\nimport BaseStyles from '@lib/styles/BaseStyles'\nimport { breakpoints, variables } from '@modules/_ui/config'\n\nconst emotionTheme = {\n  breakpoints: Object.keys(breakpoints).map(key => breakpoints[key]),\n}\n\nexport default function ThemeProvider({ children }) {\n  const [isDarkMode, setIsDarkMode] = useState(false)\n  const themeMode = isDarkMode ? 'dark' : 'light'\n\n  const toggleTheme = () => setIsDarkMode(!isDarkMode)\n\n  return (\n    <EmotionThemeProvider\n      theme={{\n        ...emotionTheme,\n        variables: variables[themeMode],\n        themeMode,\n        toggleTheme,\n      }}>\n      <BaseStyles />\n      {children}\n    </EmotionThemeProvider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}