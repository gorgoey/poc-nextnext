{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/lib/styles/BaseStyles/index.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n  \", \"\\n  \", \"\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Fragment } from 'react';\nimport { Global, css } from '@emotion/core';\nimport { useTheme } from '@emotion/react';\nimport getGlobalStyles from \"../../../modules/_ui/globalStyles\";\nimport normalize from \"./_normalize\";\nimport reset from \"./_reset\";\nimport clearFix from \"./_clearFix\";\n\nvar getBaseStyles = function getBaseStyles(colors) {\n  return css(_templateObject(), normalize, reset, clearFix, getGlobalStyles(colors));\n};\n\nexport default function BaseStyles() {\n  _s();\n\n  var _useTheme = useTheme(),\n      variables = _useTheme.variables;\n\n  return _jsxDEV(Fragment, {\n    children: _jsxDEV(Global, {\n      styles: getBaseStyles(variables)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BaseStyles, \"3E87JQ2lYAerNpJvD60oHdxuPnE=\", false, function () {\n  return [useTheme];\n});\n\n_c = BaseStyles;\n\nvar _c;\n\n$RefreshReg$(_c, \"BaseStyles\");","map":{"version":3,"sources":["/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/lib/styles/BaseStyles/index.js"],"names":["Fragment","Global","css","useTheme","getGlobalStyles","normalize","reset","clearFix","getBaseStyles","colors","BaseStyles","variables"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,EAAiBC,GAAjB,QAA4B,eAA5B;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,eAAP;AAEA,OAAOC,SAAP;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,MAAM;AAAA,SAAIP,GAAJ,oBACxBG,SADwB,EAExBC,KAFwB,EAGxBC,QAHwB,EAIxBH,eAAe,CAACK,MAAD,CAJS;AAAA,CAA5B;;AAOA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAAA,kBACbP,QAAQ,EADK;AAAA,MAC3BQ,SAD2B,aAC3BA,SAD2B;;AAGnC,SACE,QAAC,QAAD;AAAA,cACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEH,aAAa,CAACG,SAAD;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GARuBD,U;UACAP,Q;;;KADAO,U","sourcesContent":["import { Fragment } from 'react'\nimport { Global, css } from '@emotion/core'\nimport { useTheme } from '@emotion/react'\nimport getGlobalStyles from '@modules/_ui/globalStyles'\n\nimport normalize from './_normalize'\nimport reset from './_reset'\nimport clearFix from './_clearFix'\n\nconst getBaseStyles = colors => css`\n  ${normalize}\n  ${reset}\n  ${clearFix}\n  ${getGlobalStyles(colors)}\n`\n\nexport default function BaseStyles() {\n  const { variables } = useTheme()\n\n  return (\n    <Fragment>\n      <Global styles={getBaseStyles(variables)} />\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}