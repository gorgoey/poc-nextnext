{"ast":null,"code":"import { makeObservable, observable, action, computed } from 'mobx';\nexport default class UIStore {\n  constructor(rootStore) {\n    this.dimensions = {\n      width: '',\n      height: ''\n    };\n    if (!false) return; // this.rootStore = rootStore\n\n    makeObservable(this, {\n      dimensions: observable.struct,\n      setDimensions: action,\n      orientation: computed\n    });\n\n    const listener = () => {\n      this.setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n\n    setTimeout(listener, 0);\n    window.addEventListener('resize', listener);\n  }\n\n  setDimensions(dimensions) {\n    this.dimensions = dimensions;\n  }\n\n  get orientation() {\n    const {\n      width,\n      height\n    } = this.dimensions;\n    return width > height ? 'landscape' : 'portrait';\n  }\n\n}","map":{"version":3,"sources":["/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/modules/_ui/store.js"],"names":["makeObservable","observable","action","computed","UIStore","constructor","rootStore","dimensions","width","height","struct","setDimensions","orientation","listener","window","innerWidth","innerHeight","setTimeout","addEventListener"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,UAAzB,EAAqCC,MAArC,EAA6CC,QAA7C,QAA6D,MAA7D;AAEA,eAAe,MAAMC,OAAN,CAAc;AAM3BC,EAAAA,WAAW,CAACC,SAAD,EAAY;AAAA,SALvBC,UAKuB,GALV;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAKU;AACrB,QAAI,MAAJ,EAAsB,OADD,CAGrB;;AAEAT,IAAAA,cAAc,CAAC,IAAD,EAAO;AACnBO,MAAAA,UAAU,EAAEN,UAAU,CAACS,MADJ;AAEnBC,MAAAA,aAAa,EAAET,MAFI;AAGnBU,MAAAA,WAAW,EAAET;AAHM,KAAP,CAAd;;AAMA,UAAMU,QAAQ,GAAG,MAAM;AACrB,WAAKF,aAAL,CAAmB;AACjBH,QAAAA,KAAK,EAAEM,MAAM,CAACC,UADG;AAEjBN,QAAAA,MAAM,EAAEK,MAAM,CAACE;AAFE,OAAnB;AAID,KALD;;AAMAC,IAAAA,UAAU,CAACJ,QAAD,EAAW,CAAX,CAAV;AAEAC,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCL,QAAlC;AACD;;AAEDF,EAAAA,aAAa,CAACJ,UAAD,EAAa;AACxB,SAAKA,UAAL,GAAkBA,UAAlB;AACD;;AAED,MAAIK,WAAJ,GAAkB;AAChB,UAAM;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAoB,KAAKF,UAA/B;AACA,WAAOC,KAAK,GAAGC,MAAR,GAAiB,WAAjB,GAA+B,UAAtC;AACD;;AAnC0B","sourcesContent":["import { makeObservable, observable, action, computed } from 'mobx'\n\nexport default class UIStore {\n  dimensions = {\n    width: '',\n    height: '',\n  }\n\n  constructor(rootStore) {\n    if (!process.browser) return\n\n    // this.rootStore = rootStore\n\n    makeObservable(this, {\n      dimensions: observable.struct,\n      setDimensions: action,\n      orientation: computed,\n    })\n\n    const listener = () => {\n      this.setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      })\n    }\n    setTimeout(listener, 0)\n\n    window.addEventListener('resize', listener)\n  }\n\n  setDimensions(dimensions) {\n    this.dimensions = dimensions\n  }\n\n  get orientation() {\n    const { width, height } = this.dimensions\n    return width > height ? 'landscape' : 'portrait'\n  }\n}\n"]},"metadata":{},"sourceType":"module"}