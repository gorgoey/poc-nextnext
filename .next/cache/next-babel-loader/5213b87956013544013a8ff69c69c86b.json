{"ast":null,"code":"import trimStart from 'lodash/trimStart';\nimport routes from \"../../modules/_router\";\nexport function getAsPathByRouteName(route, params = {}) {\n  const pathname = routes[route];\n  return getAsPathByPathName(pathname, params);\n}\nexport function getAsPathByPathName(pathname, params = {}) {\n  let unusedParams = '';\n  const asPath = Object.keys(params).reduce((prev, cur) => {\n    const inUsed = pathname.indexOf(`[${cur}]`);\n\n    if (inUsed === -1) {\n      unusedParams = unusedParams + `&${cur}=${params[cur]}`;\n    }\n\n    return `${prev.replace(`[${cur}]`, params[cur])}`;\n  }, pathname);\n  const queryString = unusedParams !== '' ? '?' + trimStart(unusedParams, '&') : '';\n  return `${asPath}${queryString}`;\n}\nexport function getHrefByRouteName(route, params = {}) {\n  return {\n    pathname: routes[route],\n    query: params\n  };\n}\nexport function getRouteByPathname(pathname) {\n  let instantPathname = pathname;\n  if (pathname.substr(-1) !== '/') instantPathname = pathname + '/';\n  return Object.keys(routes).find(key => routes[key] === instantPathname);\n}","map":{"version":3,"sources":["/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/lib/router/utils.js"],"names":["trimStart","routes","getAsPathByRouteName","route","params","pathname","getAsPathByPathName","unusedParams","asPath","Object","keys","reduce","prev","cur","inUsed","indexOf","replace","queryString","getHrefByRouteName","query","getRouteByPathname","instantPathname","substr","find","key"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,OAAOC,MAAP;AAEA,OAAO,SAASC,oBAAT,CAA8BC,KAA9B,EAAqCC,MAAM,GAAG,EAA9C,EAAkD;AACvD,QAAMC,QAAQ,GAAGJ,MAAM,CAACE,KAAD,CAAvB;AACA,SAAOG,mBAAmB,CAACD,QAAD,EAAWD,MAAX,CAA1B;AACD;AAED,OAAO,SAASE,mBAAT,CAA6BD,QAA7B,EAAuCD,MAAM,GAAG,EAAhD,EAAoD;AACzD,MAAIG,YAAY,GAAG,EAAnB;AAEA,QAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYN,MAAZ,EAAoBO,MAApB,CAA2B,CAACC,IAAD,EAAOC,GAAP,KAAe;AACvD,UAAMC,MAAM,GAAGT,QAAQ,CAACU,OAAT,CAAkB,IAAGF,GAAI,GAAzB,CAAf;;AACA,QAAIC,MAAM,KAAK,CAAC,CAAhB,EAAmB;AACjBP,MAAAA,YAAY,GAAGA,YAAY,GAAI,IAAGM,GAAI,IAAGT,MAAM,CAACS,GAAD,CAAM,EAArD;AACD;;AAED,WAAQ,GAAED,IAAI,CAACI,OAAL,CAAc,IAAGH,GAAI,GAArB,EAAyBT,MAAM,CAACS,GAAD,CAA/B,CAAsC,EAAhD;AACD,GAPc,EAOZR,QAPY,CAAf;AASA,QAAMY,WAAW,GACfV,YAAY,KAAK,EAAjB,GAAsB,MAAMP,SAAS,CAACO,YAAD,EAAe,GAAf,CAArC,GAA2D,EAD7D;AAGA,SAAQ,GAAEC,MAAO,GAAES,WAAY,EAA/B;AACD;AAED,OAAO,SAASC,kBAAT,CAA4Bf,KAA5B,EAAmCC,MAAM,GAAG,EAA5C,EAAgD;AACrD,SAAO;AAAEC,IAAAA,QAAQ,EAAEJ,MAAM,CAACE,KAAD,CAAlB;AAA2BgB,IAAAA,KAAK,EAAEf;AAAlC,GAAP;AACD;AAED,OAAO,SAASgB,kBAAT,CAA4Bf,QAA5B,EAAsC;AAC3C,MAAIgB,eAAe,GAAGhB,QAAtB;AAEA,MAAIA,QAAQ,CAACiB,MAAT,CAAgB,CAAC,CAAjB,MAAwB,GAA5B,EAAiCD,eAAe,GAAGhB,QAAQ,GAAG,GAA7B;AAEjC,SAAOI,MAAM,CAACC,IAAP,CAAYT,MAAZ,EAAoBsB,IAApB,CAAyBC,GAAG,IAAIvB,MAAM,CAACuB,GAAD,CAAN,KAAgBH,eAAhD,CAAP;AACD","sourcesContent":["import trimStart from 'lodash/trimStart'\nimport routes from '@modules/_router'\n\nexport function getAsPathByRouteName(route, params = {}) {\n  const pathname = routes[route]\n  return getAsPathByPathName(pathname, params)\n}\n\nexport function getAsPathByPathName(pathname, params = {}) {\n  let unusedParams = ''\n\n  const asPath = Object.keys(params).reduce((prev, cur) => {\n    const inUsed = pathname.indexOf(`[${cur}]`)\n    if (inUsed === -1) {\n      unusedParams = unusedParams + `&${cur}=${params[cur]}`\n    }\n\n    return `${prev.replace(`[${cur}]`, params[cur])}`\n  }, pathname)\n\n  const queryString =\n    unusedParams !== '' ? '?' + trimStart(unusedParams, '&') : ''\n\n  return `${asPath}${queryString}`\n}\n\nexport function getHrefByRouteName(route, params = {}) {\n  return { pathname: routes[route], query: params }\n}\n\nexport function getRouteByPathname(pathname) {\n  let instantPathname = pathname\n\n  if (pathname.substr(-1) !== '/') instantPathname = pathname + '/'\n\n  return Object.keys(routes).find(key => routes[key] === instantPathname)\n}\n"]},"metadata":{},"sourceType":"module"}