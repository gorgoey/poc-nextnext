{"ast":null,"code":"import trimStart from 'lodash/trimStart';\nimport routes from \"../../modules/_router\";\nexport function getAsPathByRouteName(route) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var pathname = routes[route];\n  return getAsPathByPathName(pathname, params);\n}\nexport function getAsPathByPathName(pathname) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var unusedParams = '';\n  var asPath = Object.keys(params).reduce(function (prev, cur) {\n    var inUsed = pathname.indexOf(\"[\".concat(cur, \"]\"));\n\n    if (inUsed === -1) {\n      unusedParams = unusedParams + \"&\".concat(cur, \"=\").concat(params[cur]);\n    }\n\n    return \"\".concat(prev.replace(\"[\".concat(cur, \"]\"), params[cur]));\n  }, pathname);\n  var queryString = unusedParams !== '' ? '?' + trimStart(unusedParams, '&') : '';\n  return \"\".concat(asPath).concat(queryString);\n}\nexport function getHrefByRouteName(route) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return {\n    pathname: routes[route],\n    query: params\n  };\n}\nexport function getRouteByPathname(pathname) {\n  var instantPathname = pathname;\n  if (pathname.substr(-1) !== '/') instantPathname = pathname + '/';\n  return Object.keys(routes).find(function (key) {\n    return routes[key] === instantPathname;\n  });\n}","map":null,"metadata":{},"sourceType":"module"}