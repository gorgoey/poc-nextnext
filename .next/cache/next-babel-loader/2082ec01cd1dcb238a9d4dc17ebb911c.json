{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/lib/page/Page/index.js\";\nimport { useEffect, Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport { useMember } from \"../../auth\";\nimport { getHrefByRouteName } from \"../../router/utils\";\nimport * as layouts from \"../../../components/_layouts\";\nimport Meta from \"./Meta\";\nimport Stats from \"./Stats\";\nexport default function Page({\n  children,\n  data,\n  metaConfig,\n  options = {}\n}) {\n  const router = useRouter();\n  const {\n    userData: {\n      isAuthenticated\n    }\n  } = useMember();\n  const Layout = layouts[options.layout || 'main'];\n  const restricted = options.restricted || false;\n  useEffect(() => {\n    if (restricted && isAuthenticated === false) {\n      router.push(getHrefByRouteName('auth-login', {\n        redirect: router.asPath\n      }));\n    }\n  }, [restricted, isAuthenticated]);\n  return _jsxDEV(Fragment, {\n    children: [_jsxDEV(Meta, {\n      data: data,\n      metaConfig: metaConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), _jsxDEV(Stats, {\n      data: data,\n      metaConfig: metaConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), _jsxDEV(Layout, {\n      restricted: restricted,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/lib/page/Page/index.js"],"names":["useEffect","Fragment","useRouter","useMember","getHrefByRouteName","layouts","Meta","Stats","Page","children","data","metaConfig","options","router","userData","isAuthenticated","Layout","layout","restricted","push","redirect","asPath"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,SAAT;AACA,SAASC,kBAAT;AACA,OAAO,KAAKC,OAAZ;AAEA,OAAOC,IAAP;AACA,OAAOC,KAAP;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,UAAlB;AAA8BC,EAAAA,OAAO,GAAG;AAAxC,CAAd,EAA4D;AACzE,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AACA,QAAM;AACJY,IAAAA,QAAQ,EAAE;AAAEC,MAAAA;AAAF;AADN,MAEFZ,SAAS,EAFb;AAIA,QAAMa,MAAM,GAAGX,OAAO,CAACO,OAAO,CAACK,MAAR,IAAkB,MAAnB,CAAtB;AACA,QAAMC,UAAU,GAAGN,OAAO,CAACM,UAAR,IAAsB,KAAzC;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,UAAU,IAAIH,eAAe,KAAK,KAAtC,EAA6C;AAC3CF,MAAAA,MAAM,CAACM,IAAP,CAAYf,kBAAkB,CAAC,YAAD,EAAe;AAAEgB,QAAAA,QAAQ,EAAEP,MAAM,CAACQ;AAAnB,OAAf,CAA9B;AACD;AACF,GAJQ,EAIN,CAACH,UAAD,EAAaH,eAAb,CAJM,CAAT;AAMA,SACE,QAAC,QAAD;AAAA,eACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEL,IAAZ;AAAkB,MAAA,UAAU,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAED,IAAb;AAAmB,MAAA,UAAU,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAEO,UAApB;AAAA,gBAAiCT;AAAjC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD","sourcesContent":["import { useEffect, Fragment } from 'react'\nimport { useRouter } from 'next/router'\n\nimport { useMember } from '@lib/auth'\nimport { getHrefByRouteName } from '@lib/router/utils'\nimport * as layouts from '@components/_layouts'\n\nimport Meta from './Meta'\nimport Stats from './Stats'\n\nexport default function Page({ children, data, metaConfig, options = {} }) {\n  const router = useRouter()\n  const {\n    userData: { isAuthenticated },\n  } = useMember()\n\n  const Layout = layouts[options.layout || 'main']\n  const restricted = options.restricted || false\n\n  useEffect(() => {\n    if (restricted && isAuthenticated === false) {\n      router.push(getHrefByRouteName('auth-login', { redirect: router.asPath }))\n    }\n  }, [restricted, isAuthenticated])\n\n  return (\n    <Fragment>\n      <Meta data={data} metaConfig={metaConfig} />\n      <Stats data={data} metaConfig={metaConfig} />\n      <Layout restricted={restricted}>{children}</Layout>\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}