{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Fragment } from 'react';\nimport trimEnd from 'lodash/trimEnd';\nimport { useRouter } from 'next/router';\nimport { DefaultSeo, NextSeo } from 'next-seo';\nexport default function Meta(_ref) {\n  var data = _ref.data,\n      _ref$metaConfig = _ref.metaConfig,\n      metaConfig = _ref$metaConfig === void 0 ? {} : _ref$metaConfig;\n  var _metaConfig$getPage = metaConfig.getPage,\n      getPage = _metaConfig$getPage === void 0 ? function () {\n    return 'main';\n  } : _metaConfig$getPage,\n      _metaConfig$getMeta = metaConfig.getMeta,\n      getMeta = _metaConfig$getMeta === void 0 ? function () {} : _metaConfig$getMeta,\n      _metaConfig$getSchema = metaConfig.getSchema,\n      getSchema = _metaConfig$getSchema === void 0 ? function () {} : _metaConfig$getSchema;\n  var page = getPage(data);\n  var meta = getMeta(data) || {};\n  var schemas = getSchema(data) || {};\n  var router = useRouter();\n  var metaUrl = process.env.META_URL || process.env.HOST;\n  var newOgUrl = trimEnd(\"\".concat(metaUrl + router.asPath), '/') + '/';\n  var parsedMeta = meta[page] || {};\n  var schema = schemas[page];\n\n  var openGraph = parsedMeta.openGraph,\n      restMeta = _objectWithoutProperties(parsedMeta, [\"openGraph\"]);\n\n  return _jsxs(Fragment, {\n    children: [_jsx(DefaultSeo, {\n      titleTemplate: \"%s\",\n      openGraph: {\n        type: 'website',\n        site_name: 'SiteName'\n      }\n    }), _jsx(NextSeo, _objectSpread(_objectSpread({}, restMeta), {}, {\n      canonical: newOgUrl,\n      openGraph: _objectSpread(_objectSpread({}, openGraph), {}, {\n        url: newOgUrl\n      })\n    })), typeof schema === 'function' ? schema() : null]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}