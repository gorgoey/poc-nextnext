{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport get from 'lodash/get'; // const initialCustomDimensions = {\n//   customDM1: undefined,\n//   customDM2: undefined,\n//   dimension1: undefined,\n//   dimension2: undefined,\n// }\n\nconst variableNames = {\n  // pageView: {\n  //   page: 'customPage',\n  // },\n  event: {\n    category: 'eventCategory',\n    action: 'eventAction',\n    label: 'eventLabel',\n    value: 'eventValue'\n  }\n};\n\nfunction isDataInvalid(data) {\n  return typeof get(data, 'event') !== 'string';\n}\n\nfunction gtmPush(data) {\n  const dataLayer = window.dataLayer;\n\n  if (typeof dataLayer !== 'undefined' && !isDataInvalid(data)) {\n    dataLayer.push(data);\n  }\n}\n\nexport function logPageview(customDimensions = {}) {\n  // const { pageView } = variableNames\n  // const customData = {\n  //   ...initialCustomDimensions,\n  //   [pageView.page]: `${window.location.pathname}${window.location.search}`,\n  //   ...customDimensions,\n  // }\n  gtmPush({\n    event: 'trackPageview' // ...customData,\n\n  });\n}\nexport function logEvent(_ref) {\n  let {\n    category,\n    action,\n    label,\n    value\n  } = _ref,\n      customDimensions = _objectWithoutProperties(_ref, [\"category\", \"action\", \"label\", \"value\"]);\n\n  const {\n    event\n  } = variableNames;\n  const customData = {\n    // ...initialCustomDimensions,\n    [event.category]: category,\n    [event.action]: action,\n    [event.label]: label,\n    [event.value]: value // ...(customDimensions || {}),\n\n  };\n  gtmPush(_objectSpread({\n    event: 'trackEvent'\n  }, customData));\n}","map":{"version":3,"sources":["/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/lib/stats/gtm/index.js"],"names":["get","variableNames","event","category","action","label","value","isDataInvalid","data","gtmPush","dataLayer","window","push","logPageview","customDimensions","logEvent","customData"],"mappings":";;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,YAAhB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,aAAa,GAAG;AACpB;AACA;AACA;AACAC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,eADL;AAELC,IAAAA,MAAM,EAAE,aAFH;AAGLC,IAAAA,KAAK,EAAE,YAHF;AAILC,IAAAA,KAAK,EAAE;AAJF;AAJa,CAAtB;;AAYA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,SAAO,OAAOR,GAAG,CAACQ,IAAD,EAAO,OAAP,CAAV,KAA8B,QAArC;AACD;;AAED,SAASC,OAAT,CAAiBD,IAAjB,EAAuB;AACrB,QAAME,SAAS,GAAGC,MAAM,CAACD,SAAzB;;AAEA,MAAI,OAAOA,SAAP,KAAqB,WAArB,IAAoC,CAACH,aAAa,CAACC,IAAD,CAAtD,EAA8D;AAC5DE,IAAAA,SAAS,CAACE,IAAV,CAAeJ,IAAf;AACD;AACF;;AAED,OAAO,SAASK,WAAT,CAAqBC,gBAAgB,GAAG,EAAxC,EAA4C;AACjD;AAEA;AACA;AACA;AACA;AACA;AAEAL,EAAAA,OAAO,CAAC;AACNP,IAAAA,KAAK,EAAE,eADD,CAEN;;AAFM,GAAD,CAAP;AAID;AAED,OAAO,SAASa,QAAT,OAMJ;AAAA,MANsB;AACvBZ,IAAAA,QADuB;AAEvBC,IAAAA,MAFuB;AAGvBC,IAAAA,KAHuB;AAIvBC,IAAAA;AAJuB,GAMtB;AAAA,MADEQ,gBACF;;AACD,QAAM;AAAEZ,IAAAA;AAAF,MAAYD,aAAlB;AAEA,QAAMe,UAAU,GAAG;AACjB;AACA,KAACd,KAAK,CAACC,QAAP,GAAkBA,QAFD;AAGjB,KAACD,KAAK,CAACE,MAAP,GAAgBA,MAHC;AAIjB,KAACF,KAAK,CAACG,KAAP,GAAeA,KAJE;AAKjB,KAACH,KAAK,CAACI,KAAP,GAAeA,KALE,CAMjB;;AANiB,GAAnB;AASAG,EAAAA,OAAO;AACLP,IAAAA,KAAK,EAAE;AADF,KAEFc,UAFE,EAAP;AAID","sourcesContent":["import get from 'lodash/get'\n\n// const initialCustomDimensions = {\n//   customDM1: undefined,\n//   customDM2: undefined,\n//   dimension1: undefined,\n//   dimension2: undefined,\n// }\n\nconst variableNames = {\n  // pageView: {\n  //   page: 'customPage',\n  // },\n  event: {\n    category: 'eventCategory',\n    action: 'eventAction',\n    label: 'eventLabel',\n    value: 'eventValue',\n  },\n}\n\nfunction isDataInvalid(data) {\n  return typeof get(data, 'event') !== 'string'\n}\n\nfunction gtmPush(data) {\n  const dataLayer = window.dataLayer\n\n  if (typeof dataLayer !== 'undefined' && !isDataInvalid(data)) {\n    dataLayer.push(data)\n  }\n}\n\nexport function logPageview(customDimensions = {}) {\n  // const { pageView } = variableNames\n\n  // const customData = {\n  //   ...initialCustomDimensions,\n  //   [pageView.page]: `${window.location.pathname}${window.location.search}`,\n  //   ...customDimensions,\n  // }\n\n  gtmPush({\n    event: 'trackPageview',\n    // ...customData,\n  })\n}\n\nexport function logEvent({\n  category,\n  action,\n  label,\n  value,\n  ...customDimensions\n}) {\n  const { event } = variableNames\n\n  const customData = {\n    // ...initialCustomDimensions,\n    [event.category]: category,\n    [event.action]: action,\n    [event.label]: label,\n    [event.value]: value,\n    // ...(customDimensions || {}),\n  }\n\n  gtmPush({\n    event: 'trackEvent',\n    ...customData,\n  })\n}\n"]},"metadata":{},"sourceType":"module"}