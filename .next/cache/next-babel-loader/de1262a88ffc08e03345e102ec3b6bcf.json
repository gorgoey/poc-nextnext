{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/lib/router/Link.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Link from 'next/link';\nimport { getAsPathByRouteName, getHrefByRouteName } from \"./utils\";\nvar linkOptions = {\n  prefetch: false\n};\nexport default function CustomLink(props) {\n  var route = props.route,\n      _props$params = props.params,\n      params = _props$params === void 0 ? {} : _props$params,\n      restProps = _objectWithoutProperties(props, [\"route\", \"params\"]);\n\n  var href = getHrefByRouteName(route, params);\n  var asPath = getAsPathByRouteName(route, params);\n  return _jsxDEV(Link, _objectSpread(_objectSpread(_objectSpread({}, restProps), linkOptions), {}, {\n    href: href,\n    as: asPath\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\n_c = CustomLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomLink\");","map":{"version":3,"sources":["/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/lib/router/Link.js"],"names":["Link","getAsPathByRouteName","getHrefByRouteName","linkOptions","prefetch","CustomLink","props","route","params","restProps","href","asPath"],"mappings":";;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,SAASC,oBAAT,EAA+BC,kBAA/B;AAEA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAE;AADQ,CAApB;AAIA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,MAChCC,KADgC,GACKD,KADL,CAChCC,KADgC;AAAA,sBACKD,KADL,CACzBE,MADyB;AAAA,MACzBA,MADyB,8BAChB,EADgB;AAAA,MACTC,SADS,4BACKH,KADL;;AAGxC,MAAMI,IAAI,GAAGR,kBAAkB,CAACK,KAAD,EAAQC,MAAR,CAA/B;AACA,MAAMG,MAAM,GAAGV,oBAAoB,CAACM,KAAD,EAAQC,MAAR,CAAnC;AACA,SAAO,QAAC,IAAD,gDAAUC,SAAV,GAAyBN,WAAzB;AAAsC,IAAA,IAAI,EAAEO,IAA5C;AAAkD,IAAA,EAAE,EAAEC;AAAtD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KANuBN,U","sourcesContent":["import Link from 'next/link'\n\nimport { getAsPathByRouteName, getHrefByRouteName } from './utils'\n\nconst linkOptions = {\n  prefetch: false,\n}\n\nexport default function CustomLink(props) {\n  const { route, params = {}, ...restProps } = props\n\n  const href = getHrefByRouteName(route, params)\n  const asPath = getAsPathByRouteName(route, params)\n  return <Link {...restProps} {...linkOptions} href={href} as={asPath} />\n}\n"]},"metadata":{},"sourceType":"module"}