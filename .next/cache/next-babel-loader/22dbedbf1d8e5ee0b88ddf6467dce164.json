{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport axios from 'axios';\nconst defaultTimeout = 10000;\nexport function fetchAPI(_ref) {\n  let {\n    apiUrl = process.env.API_URL,\n    path,\n    token,\n    timeout = defaultTimeout\n  } = _ref,\n      options = _objectWithoutProperties(_ref, [\"apiUrl\", \"path\", \"token\", \"timeout\"]);\n\n  return axios(_objectSpread({\n    baseURL: `${apiUrl}${path}`,\n    headers: _objectSpread({}, token && {\n      Authorization: `Bearer ${token}`\n    }),\n    timeout\n  }, options)).then(({\n    data\n  }) => data);\n}\nexport function postAPI(_ref2) {\n  let {\n    apiUrl = process.env.API_URL,\n    path,\n    data,\n    token,\n    timeout = defaultTimeout\n  } = _ref2,\n      options = _objectWithoutProperties(_ref2, [\"apiUrl\", \"path\", \"data\", \"token\", \"timeout\"]);\n\n  return axios(_objectSpread({\n    method: 'post',\n    url: `${apiUrl}${path}`,\n    headers: _objectSpread({\n      'Content-Type': 'application/json'\n    }, token && {\n      Authorization: `Bearer ${token}`\n    }),\n    data,\n    timeout\n  }, options)).then(({\n    data\n  }) => data);\n}\nexport function fetchGQL({\n  apiURL = process.env.API_URL,\n  query,\n  timeout = defaultTimeout,\n  variables = null\n}) {\n  return axios({\n    method: 'post',\n    url: apiURL,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    data: {\n      query,\n      variables,\n      operationName: null\n    },\n    timeout\n  }).then(({\n    data\n  }) => data);\n}\nexport function throwError(status = 500, {\n  errorCode = ''\n} = {}) {\n  const err = new Error();\n  err.response = {\n    status,\n    errorCode\n  };\n  throw err;\n}","map":{"version":3,"sources":["/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/lib/api/helpers.js"],"names":["axios","defaultTimeout","fetchAPI","apiUrl","process","env","API_URL","path","token","timeout","options","baseURL","headers","Authorization","then","data","postAPI","method","url","fetchGQL","apiURL","query","variables","operationName","throwError","status","errorCode","err","Error","response"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,cAAc,GAAG,KAAvB;AAEA,OAAO,SAASC,QAAT,OAMJ;AAAA,MANsB;AACvBC,IAAAA,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,OADE;AAEvBC,IAAAA,IAFuB;AAGvBC,IAAAA,KAHuB;AAIvBC,IAAAA,OAAO,GAAGR;AAJa,GAMtB;AAAA,MADES,OACF;;AACD,SAAOV,KAAK;AACVW,IAAAA,OAAO,EAAG,GAAER,MAAO,GAAEI,IAAK,EADhB;AAEVK,IAAAA,OAAO,oBACDJ,KAAK,IAAI;AAAEK,MAAAA,aAAa,EAAG,UAASL,KAAM;AAAjC,KADR,CAFG;AAKVC,IAAAA;AALU,KAMPC,OANO,EAAL,CAOJI,IAPI,CAOC,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAcA,IAPf,CAAP;AAQD;AAED,OAAO,SAASC,OAAT,QAOJ;AAAA,MAPqB;AACtBb,IAAAA,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,OADC;AAEtBC,IAAAA,IAFsB;AAGtBQ,IAAAA,IAHsB;AAItBP,IAAAA,KAJsB;AAKtBC,IAAAA,OAAO,GAAGR;AALY,GAOrB;AAAA,MADES,OACF;;AACD,SAAOV,KAAK;AACViB,IAAAA,MAAM,EAAE,MADE;AAEVC,IAAAA,GAAG,EAAG,GAAEf,MAAO,GAAEI,IAAK,EAFZ;AAGVK,IAAAA,OAAO;AACL,sBAAgB;AADX,OAEDJ,KAAK,IAAI;AAAEK,MAAAA,aAAa,EAAG,UAASL,KAAM;AAAjC,KAFR,CAHG;AAOVO,IAAAA,IAPU;AAQVN,IAAAA;AARU,KASPC,OATO,EAAL,CAUJI,IAVI,CAUC,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAcA,IAVf,CAAP;AAWD;AAED,OAAO,SAASI,QAAT,CAAkB;AACvBC,EAAAA,MAAM,GAAGhB,OAAO,CAACC,GAAR,CAAYC,OADE;AAEvBe,EAAAA,KAFuB;AAGvBZ,EAAAA,OAAO,GAAGR,cAHa;AAIvBqB,EAAAA,SAAS,GAAG;AAJW,CAAlB,EAKJ;AACD,SAAOtB,KAAK,CAAC;AACXiB,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAEE,MAFM;AAGXR,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAHE;AAIXG,IAAAA,IAAI,EAAE;AACJM,MAAAA,KADI;AAEJC,MAAAA,SAFI;AAGJC,MAAAA,aAAa,EAAE;AAHX,KAJK;AASXd,IAAAA;AATW,GAAD,CAAL,CAUJK,IAVI,CAUC,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAcA,IAVf,CAAP;AAWD;AAED,OAAO,SAASS,UAAT,CAAoBC,MAAM,GAAG,GAA7B,EAAkC;AAAEC,EAAAA,SAAS,GAAG;AAAd,IAAqB,EAAvD,EAA2D;AAChE,QAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,EAAAA,GAAG,CAACE,QAAJ,GAAe;AAAEJ,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAf;AACA,QAAMC,GAAN;AACD","sourcesContent":["import axios from 'axios'\n\nconst defaultTimeout = 10000\n\nexport function fetchAPI({\n  apiUrl = process.env.API_URL,\n  path,\n  token,\n  timeout = defaultTimeout,\n  ...options\n}) {\n  return axios({\n    baseURL: `${apiUrl}${path}`,\n    headers: {\n      ...(token && { Authorization: `Bearer ${token}` }),\n    },\n    timeout,\n    ...options,\n  }).then(({ data }) => data)\n}\n\nexport function postAPI({\n  apiUrl = process.env.API_URL,\n  path,\n  data,\n  token,\n  timeout = defaultTimeout,\n  ...options\n}) {\n  return axios({\n    method: 'post',\n    url: `${apiUrl}${path}`,\n    headers: {\n      'Content-Type': 'application/json',\n      ...(token && { Authorization: `Bearer ${token}` }),\n    },\n    data,\n    timeout,\n    ...options,\n  }).then(({ data }) => data)\n}\n\nexport function fetchGQL({\n  apiURL = process.env.API_URL,\n  query,\n  timeout = defaultTimeout,\n  variables = null,\n}) {\n  return axios({\n    method: 'post',\n    url: apiURL,\n    headers: { 'Content-Type': 'application/json' },\n    data: {\n      query,\n      variables,\n      operationName: null,\n    },\n    timeout,\n  }).then(({ data }) => data)\n}\n\nexport function throwError(status = 500, { errorCode = '' } = {}) {\n  const err = new Error()\n  err.response = { status, errorCode }\n  throw err\n}\n"]},"metadata":{},"sourceType":"module"}