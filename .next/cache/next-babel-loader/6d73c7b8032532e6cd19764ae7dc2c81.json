{"ast":null,"code":"import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport { ThemeProvider as EmotionThemeProvider } from '@emotion/react';\nimport BaseStyles from \"./BaseStyles\";\nimport { breakpoints, variables } from \"../../modules/_ui/config\";\nconst emotionTheme = {\n  breakpoints: Object.keys(breakpoints).map(key => breakpoints[key])\n};\nexport default function ThemeProvider({\n  children\n}) {\n  const {\n    0: isDarkMode,\n    1: setIsDarkMode\n  } = useState(false);\n  const themeMode = isDarkMode ? 'dark' : 'light';\n\n  const toggleTheme = () => setIsDarkMode(!isDarkMode);\n\n  return _jsxs(EmotionThemeProvider, {\n    theme: _objectSpread(_objectSpread({}, emotionTheme), {}, {\n      variables: variables[themeMode],\n      themeMode,\n      toggleTheme\n    }),\n    children: [_jsx(BaseStyles, {}), children]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}