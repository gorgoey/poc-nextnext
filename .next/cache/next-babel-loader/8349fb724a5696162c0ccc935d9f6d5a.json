{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/lib/page/Page/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, Fragment } from 'react';\nimport { useRouter } from 'next/router';\nimport { useMember } from \"../../auth\";\nimport { getHrefByRouteName } from \"../../router/utils\";\nimport * as layouts from \"../../../components/_layouts\";\nimport Meta from \"./Meta\";\nimport Stats from \"./Stats\";\nexport default function Page(_ref) {\n  _s();\n\n  var children = _ref.children,\n      data = _ref.data,\n      metaConfig = _ref.metaConfig,\n      _ref$options = _ref.options,\n      options = _ref$options === void 0 ? {} : _ref$options;\n  var router = useRouter();\n\n  var _useMember = useMember(),\n      isAuthenticated = _useMember.userData.isAuthenticated;\n\n  var Layout = layouts[options.layout || 'main'];\n  var restricted = options.restricted || false;\n  useEffect(function () {\n    if (restricted && isAuthenticated === false) {\n      router.push(getHrefByRouteName('auth-login', {\n        redirect: router.asPath\n      }));\n    }\n  }, [restricted, isAuthenticated]);\n  return _jsxDEV(Fragment, {\n    children: [_jsxDEV(Meta, {\n      data: data,\n      metaConfig: metaConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), _jsxDEV(Stats, {\n      data: data,\n      metaConfig: metaConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), _jsxDEV(Layout, {\n      restricted: restricted,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Page, \"aq1SFUQfsLV18BC2gepZA6KlJRo=\", false, function () {\n  return [useRouter, useMember];\n});\n\n_c = Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/lib/page/Page/index.js"],"names":["useEffect","Fragment","useRouter","useMember","getHrefByRouteName","layouts","Meta","Stats","Page","children","data","metaConfig","options","router","isAuthenticated","userData","Layout","layout","restricted","push","redirect","asPath"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,SAASC,SAAT;AACA,SAASC,kBAAT;AACA,OAAO,KAAKC,OAAZ;AAEA,OAAOC,IAAP;AACA,OAAOC,KAAP;AAEA,eAAe,SAASC,IAAT,OAA4D;AAAA;;AAAA,MAA5CC,QAA4C,QAA5CA,QAA4C;AAAA,MAAlCC,IAAkC,QAAlCA,IAAkC;AAAA,MAA5BC,UAA4B,QAA5BA,UAA4B;AAAA,0BAAhBC,OAAgB;AAAA,MAAhBA,OAAgB,6BAAN,EAAM;AACzE,MAAMC,MAAM,GAAGX,SAAS,EAAxB;;AADyE,mBAIrEC,SAAS,EAJ4D;AAAA,MAG3DW,eAH2D,cAGvEC,QAHuE,CAG3DD,eAH2D;;AAMzE,MAAME,MAAM,GAAGX,OAAO,CAACO,OAAO,CAACK,MAAR,IAAkB,MAAnB,CAAtB;AACA,MAAMC,UAAU,GAAGN,OAAO,CAACM,UAAR,IAAsB,KAAzC;AAEAlB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIkB,UAAU,IAAIJ,eAAe,KAAK,KAAtC,EAA6C;AAC3CD,MAAAA,MAAM,CAACM,IAAP,CAAYf,kBAAkB,CAAC,YAAD,EAAe;AAAEgB,QAAAA,QAAQ,EAAEP,MAAM,CAACQ;AAAnB,OAAf,CAA9B;AACD;AACF,GAJQ,EAIN,CAACH,UAAD,EAAaJ,eAAb,CAJM,CAAT;AAMA,SACE,QAAC,QAAD;AAAA,eACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEJ,IAAZ;AAAkB,MAAA,UAAU,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAED,IAAb;AAAmB,MAAA,UAAU,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAEO,UAApB;AAAA,gBAAiCT;AAAjC;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAtBuBD,I;UACPN,S,EAGXC,S;;;KAJkBK,I","sourcesContent":["import { useEffect, Fragment } from 'react'\nimport { useRouter } from 'next/router'\n\nimport { useMember } from '@lib/auth'\nimport { getHrefByRouteName } from '@lib/router/utils'\nimport * as layouts from '@components/_layouts'\n\nimport Meta from './Meta'\nimport Stats from './Stats'\n\nexport default function Page({ children, data, metaConfig, options = {} }) {\n  const router = useRouter()\n  const {\n    userData: { isAuthenticated },\n  } = useMember()\n\n  const Layout = layouts[options.layout || 'main']\n  const restricted = options.restricted || false\n\n  useEffect(() => {\n    if (restricted && isAuthenticated === false) {\n      router.push(getHrefByRouteName('auth-login', { redirect: router.asPath }))\n    }\n  }, [restricted, isAuthenticated])\n\n  return (\n    <Fragment>\n      <Meta data={data} metaConfig={metaConfig} />\n      <Stats data={data} metaConfig={metaConfig} />\n      <Layout restricted={restricted}>{children}</Layout>\n    </Fragment>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}