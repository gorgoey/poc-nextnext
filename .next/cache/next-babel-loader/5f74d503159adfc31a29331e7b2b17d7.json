{"ast":null,"code":"import trimStart from 'lodash/trimStart';\nimport routes from \"../../modules/_router\";\nexport function getAsPathByRouteName(route, params = {}) {\n  const pathname = routes[route];\n  return getAsPathByPathName(pathname, params);\n}\nexport function getAsPathByPathName(pathname, params = {}) {\n  let unusedParams = '';\n  const asPath = Object.keys(params).reduce((prev, cur) => {\n    const inUsed = pathname.indexOf(`[${cur}]`);\n\n    if (inUsed === -1) {\n      unusedParams = unusedParams + `&${cur}=${params[cur]}`;\n    }\n\n    return `${prev.replace(`[${cur}]`, params[cur])}`;\n  }, pathname);\n  const queryString = unusedParams !== '' ? '?' + trimStart(unusedParams, '&') : '';\n  return `${asPath}${queryString}`;\n}\nexport function getHrefByRouteName(route, params = {}) {\n  return {\n    pathname: routes[route],\n    query: params\n  };\n}\nexport function getRouteByPathname(pathname) {\n  let instantPathname = pathname;\n  if (pathname.substr(-1) !== '/') instantPathname = pathname + '/';\n  return Object.keys(routes).find(key => routes[key] === instantPathname);\n}","map":null,"metadata":{},"sourceType":"module"}