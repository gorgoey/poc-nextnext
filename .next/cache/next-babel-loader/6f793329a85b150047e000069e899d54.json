{"ast":null,"code":"import React from 'react';\nimport useSWR from 'swr';\nimport isEmpty from 'lodash/isEmpty';\n\nfunction fetcher(callService) {\n  return callService();\n}\n\nexport default function Fetch({\n  children,\n  service,\n  onError,\n  preloader = null\n}) {\n  const {\n    data,\n    isValidating,\n    error\n  } = useSWR([service], fetcher);\n\n  if (isValidating) {\n    return typeof preloader === 'function' ? /*#__PURE__*/React.createElement(preloader) : preloader;\n  }\n\n  if (error) {\n    if (typeof onError === 'function') {\n      return onError(error);\n    }\n\n    console.error(error);\n    return null;\n  }\n\n  if (isEmpty(data)) {\n    return null;\n  }\n\n  return children({\n    data\n  });\n}","map":{"version":3,"sources":["/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/lib/api/Fetch.js"],"names":["React","useSWR","isEmpty","fetcher","callService","Fetch","children","service","onError","preloader","data","isValidating","error","createElement","console"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,SAASC,OAAT,CAAiBC,WAAjB,EAA8B;AAC5B,SAAOA,WAAW,EAAlB;AACD;;AAED,eAAe,SAASC,KAAT,CAAe;AAC5BC,EAAAA,QAD4B;AAE5BC,EAAAA,OAF4B;AAG5BC,EAAAA,OAH4B;AAI5BC,EAAAA,SAAS,GAAG;AAJgB,CAAf,EAKZ;AACD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,YAAR;AAAsBC,IAAAA;AAAtB,MAAgCX,MAAM,CAAC,CAACM,OAAD,CAAD,EAAYJ,OAAZ,CAA5C;;AAEA,MAAIQ,YAAJ,EAAkB;AAChB,WAAO,OAAOF,SAAP,KAAqB,UAArB,gBACHT,KAAK,CAACa,aAAN,CAAoBJ,SAApB,CADG,GAEHA,SAFJ;AAGD;;AAED,MAAIG,KAAJ,EAAW;AACT,QAAI,OAAOJ,OAAP,KAAmB,UAAvB,EAAmC;AACjC,aAAOA,OAAO,CAACI,KAAD,CAAd;AACD;;AAEDE,IAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AACA,WAAO,IAAP;AACD;;AAED,MAAIV,OAAO,CAACQ,IAAD,CAAX,EAAmB;AACjB,WAAO,IAAP;AACD;;AAED,SAAOJ,QAAQ,CAAC;AAAEI,IAAAA;AAAF,GAAD,CAAf;AACD","sourcesContent":["import React from 'react'\nimport useSWR from 'swr'\nimport isEmpty from 'lodash/isEmpty'\n\nfunction fetcher(callService) {\n  return callService()\n}\n\nexport default function Fetch({\n  children,\n  service,\n  onError,\n  preloader = null,\n}) {\n  const { data, isValidating, error } = useSWR([service], fetcher)\n\n  if (isValidating) {\n    return typeof preloader === 'function'\n      ? React.createElement(preloader)\n      : preloader\n  }\n\n  if (error) {\n    if (typeof onError === 'function') {\n      return onError(error)\n    }\n\n    console.error(error)\n    return null\n  }\n\n  if (isEmpty(data)) {\n    return null\n  }\n\n  return children({ data })\n}\n"]},"metadata":{},"sourceType":"module"}