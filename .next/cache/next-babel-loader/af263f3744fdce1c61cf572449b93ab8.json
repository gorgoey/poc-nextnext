{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport get from 'lodash/get';\nimport Error404Page from \"../../components/_pages/_error/404\";\nimport Error500Page from \"../../components/_pages/_error/500\";\nexport function withErrorHandling(getServerSideProps) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n      var pageProps, statusCode, errorCode;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              pageProps = {};\n              _context.prev = 1;\n              _context.next = 4;\n              return getServerSideProps(context);\n\n            case 4:\n              pageProps = _context.sent;\n              _context.next = 14;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              console.error(_context.t0);\n              statusCode = get(_context.t0, 'response.status', 500);\n              errorCode = get(_context.t0, 'response.errorCode', '');\n\n              if (context.res) {\n                context.res.statusCode = statusCode;\n              }\n\n              pageProps.props = {\n                statusCode: statusCode,\n                errorCode: errorCode\n              };\n\n            case 14:\n              return _context.abrupt(\"return\", pageProps);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 7]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\nexport var ErrorProvider = /*#__PURE__*/function (_React$Component) {\n  _inherits(ErrorProvider, _React$Component);\n\n  var _super = _createSuper(ErrorProvider);\n\n  function ErrorProvider() {\n    var _this;\n\n    _classCallCheck(this, ErrorProvider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      hasRuntimeError: false,\n      error: {}\n    };\n    return _this;\n  }\n\n  _createClass(ErrorProvider, [{\n    key: \"componentDidCatch\",\n    value: function componentDidCatch(error, errorInfo) {\n      console.error('Runtime Error:', error, errorInfo);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var statusCode = get(this.props.children, 'props.statusCode', 200); // If any runtime error\n\n      if (this.state.hasRuntimeError) {\n        return _jsx(Error500Page, {\n          errorCode: this.state.error.errorCode\n        });\n      } // If any error\n\n\n      if (statusCode >= 500) {\n        return _jsx(Error500Page, {});\n      } // If api path not found\n\n\n      if (statusCode >= 400) {\n        var errorCode = get(this.props, 'errorCode', '');\n        return _jsx(Error404Page, {\n          errorCode: errorCode\n        });\n      }\n\n      return this.props.children;\n    }\n  }], [{\n    key: \"getDerivedStateFromError\",\n    value: function getDerivedStateFromError(error) {\n      var errorResponse = get(error, 'response', {});\n      return {\n        hasRuntimeError: true,\n        error: errorResponse\n      };\n    }\n  }]);\n\n  return ErrorProvider;\n}(React.Component);","map":null,"metadata":{},"sourceType":"module"}