{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport { makeObservable, observable, action, computed } from 'mobx';\n\nvar UIStore = /*#__PURE__*/function () {\n  function UIStore(rootStore) {\n    var _this = this;\n\n    _classCallCheck(this, UIStore);\n\n    this.dimensions = {\n      width: '',\n      height: ''\n    };\n    if (!true) return; // this.rootStore = rootStore\n\n    makeObservable(this, {\n      dimensions: observable.struct,\n      setDimensions: action,\n      orientation: computed\n    });\n\n    var listener = function listener() {\n      _this.setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n\n    setTimeout(listener, 0);\n    window.addEventListener('resize', listener);\n  }\n\n  _createClass(UIStore, [{\n    key: \"setDimensions\",\n    value: function setDimensions(dimensions) {\n      this.dimensions = dimensions;\n    }\n  }, {\n    key: \"orientation\",\n    get: function get() {\n      var _this$dimensions = this.dimensions,\n          width = _this$dimensions.width,\n          height = _this$dimensions.height;\n      return width > height ? 'landscape' : 'portrait';\n    }\n  }]);\n\n  return UIStore;\n}();\n\nexport { UIStore as default };","map":{"version":3,"sources":["/Volumes/Backup HD/frontend/poc-next-web/poc-nextnext/src/modules/_ui/store.js"],"names":["makeObservable","observable","action","computed","UIStore","rootStore","dimensions","width","height","struct","setDimensions","orientation","listener","window","innerWidth","innerHeight","setTimeout","addEventListener"],"mappings":";;AAAA,SAASA,cAAT,EAAyBC,UAAzB,EAAqCC,MAArC,EAA6CC,QAA7C,QAA6D,MAA7D;;IAEqBC,O;AAMnB,mBAAYC,SAAZ,EAAuB;AAAA;;AAAA;;AAAA,SALvBC,UAKuB,GALV;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAKU;AACrB,QAAI,KAAJ,EAAsB,OADD,CAGrB;;AAEAR,IAAAA,cAAc,CAAC,IAAD,EAAO;AACnBM,MAAAA,UAAU,EAAEL,UAAU,CAACQ,MADJ;AAEnBC,MAAAA,aAAa,EAAER,MAFI;AAGnBS,MAAAA,WAAW,EAAER;AAHM,KAAP,CAAd;;AAMA,QAAMS,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,MAAA,KAAI,CAACF,aAAL,CAAmB;AACjBH,QAAAA,KAAK,EAAEM,MAAM,CAACC,UADG;AAEjBN,QAAAA,MAAM,EAAEK,MAAM,CAACE;AAFE,OAAnB;AAID,KALD;;AAMAC,IAAAA,UAAU,CAACJ,QAAD,EAAW,CAAX,CAAV;AAEAC,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCL,QAAlC;AACD;;;;kCAEaN,U,EAAY;AACxB,WAAKA,UAAL,GAAkBA,UAAlB;AACD;;;wBAEiB;AAAA,6BACU,KAAKA,UADf;AAAA,UACRC,KADQ,oBACRA,KADQ;AAAA,UACDC,MADC,oBACDA,MADC;AAEhB,aAAOD,KAAK,GAAGC,MAAR,GAAiB,WAAjB,GAA+B,UAAtC;AACD;;;;;;SAnCkBJ,O","sourcesContent":["import { makeObservable, observable, action, computed } from 'mobx'\n\nexport default class UIStore {\n  dimensions = {\n    width: '',\n    height: '',\n  }\n\n  constructor(rootStore) {\n    if (!process.browser) return\n\n    // this.rootStore = rootStore\n\n    makeObservable(this, {\n      dimensions: observable.struct,\n      setDimensions: action,\n      orientation: computed,\n    })\n\n    const listener = () => {\n      this.setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      })\n    }\n    setTimeout(listener, 0)\n\n    window.addEventListener('resize', listener)\n  }\n\n  setDimensions(dimensions) {\n    this.dimensions = dimensions\n  }\n\n  get orientation() {\n    const { width, height } = this.dimensions\n    return width > height ? 'landscape' : 'portrait'\n  }\n}\n"]},"metadata":{},"sourceType":"module"}