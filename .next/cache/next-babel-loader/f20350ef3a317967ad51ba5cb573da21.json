{"ast":null,"code":"import { jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { Fragment } from 'react';\nimport { useTheme } from '@emotion/react';\nimport { Flex, Box } from \"../../../../lib/styles/grid\";\nimport { Page } from \"../../../../lib/page\";\nimport { Fetch, FetchMore } from \"../../../../lib/api\";\nimport * as ArticleService from \"../../../../modules/article/services\";\nimport PopularArticles from \"../../article/ArticleDetailPage/PopularArticles\";\nimport ArticleLatest, { ArticleList } from \"./ArticleLatest\";\nimport * as metaConfig from \"./meta\";\nexport default function HomePage({\n  articleLatest\n}) {\n  const {\n    variables\n  } = useTheme();\n  return _jsx(Page, {\n    metaConfig: metaConfig,\n    children: _jsxs(Flex, {\n      children: [_jsxs(Box, {\n        width: [1, 2 / 3],\n        pr: [0, 20],\n        children: [_jsx(ArticleLatest, {\n          data: articleLatest\n        }), _jsx(FetchMore, {\n          service: ({\n            start,\n            limit\n          }) => ArticleService.getArticles({\n            start,\n            limit\n          }),\n          start: 5,\n          limit: 5,\n          children: ({\n            data,\n            fetchMore,\n            isLoading,\n            isDone\n          }) => {\n            return _jsxs(Fragment, {\n              children: [_jsx(ArticleList, {\n                data: data\n              }), !isDone && _jsx(\"div\", {\n                css: {\n                  textAlign: 'center'\n                },\n                children: _jsx(\"button\", {\n                  onClick: fetchMore,\n                  css: {\n                    width: '100%',\n                    padding: '10px 20px',\n                    border: `1px solid ${variables.colors.background.secondary}`,\n                    borderRadius: '5px',\n                    color: variables.colors.text.secondary\n                  },\n                  children: isLoading ? 'Loading...' : 'Load More'\n                })\n              })]\n            });\n          }\n        })]\n      }), _jsx(Box, {\n        width: [1, 1 / 3],\n        pl: [0, 20],\n        children: _jsx(Fetch, {\n          service: () => ArticleService.getArticles({\n            limit: 5\n          }),\n          children: ({\n            data\n          }) => _jsx(PopularArticles, {\n            data: data\n          })\n        })\n      })]\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}