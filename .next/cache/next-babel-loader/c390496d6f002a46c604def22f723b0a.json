{"ast":null,"code":"import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"@emotion/react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Fragment } from 'react';\nimport trimEnd from 'lodash/trimEnd';\nimport { useRouter } from 'next/router';\nimport { DefaultSeo, NextSeo } from 'next-seo';\nexport default function Meta({\n  data,\n  metaConfig = {}\n}) {\n  const {\n    getPage = () => 'main',\n    getMeta = () => {},\n    getSchema = () => {}\n  } = metaConfig;\n  const page = getPage(data);\n  const meta = getMeta(data) || {};\n  const schemas = getSchema(data) || {};\n  const router = useRouter();\n  const metaUrl = process.env.META_URL || process.env.HOST;\n  const newOgUrl = trimEnd(`${metaUrl + router.asPath}`, '/') + '/';\n  const parsedMeta = meta[page] || {};\n  const schema = schemas[page];\n\n  const {\n    openGraph\n  } = parsedMeta,\n        restMeta = _objectWithoutProperties(parsedMeta, [\"openGraph\"]);\n\n  return _jsxs(Fragment, {\n    children: [_jsx(DefaultSeo, {\n      titleTemplate: `%s`,\n      openGraph: {\n        type: 'website',\n        site_name: 'SiteName'\n      }\n    }), _jsx(NextSeo, _objectSpread(_objectSpread({}, restMeta), {}, {\n      canonical: newOgUrl,\n      openGraph: _objectSpread(_objectSpread({}, openGraph), {}, {\n        url: newOgUrl\n      })\n    })), typeof schema === 'function' ? schema() : null]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}