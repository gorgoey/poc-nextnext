{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { makeObservable, observable, action } from 'mobx';\nimport uniqueId from 'lodash/uniqueId';\n\nvar ErrorStore = /*#__PURE__*/function () {\n  function ErrorStore(rootStore) {\n    _classCallCheck(this, ErrorStore);\n\n    this.expired = 5000;\n    this.errors = [];\n    // this.rootStore = rootStore\n    makeObservable(this, {\n      errors: observable,\n      addError: action,\n      removeError: action\n    });\n  }\n\n  _createClass(ErrorStore, [{\n    key: \"addError\",\n    value: function addError(error) {\n      var _this = this;\n\n      var id = uniqueId();\n      this.errors.push(_objectSpread(_objectSpread({}, error), {}, {\n        id: id\n      }));\n      setTimeout(function () {\n        _this.removeError(id);\n      }, this.expired);\n    }\n  }, {\n    key: \"removeError\",\n    value: function removeError(id) {\n      this.errors = this.errors.filter(function (error) {\n        return error.id !== id;\n      });\n    }\n  }]);\n\n  return ErrorStore;\n}();\n\nexport { ErrorStore as default };","map":null,"metadata":{},"sourceType":"module"}