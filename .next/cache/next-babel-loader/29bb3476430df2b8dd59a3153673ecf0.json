{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Link from 'next/link';\nimport { getAsPathByRouteName, getHrefByRouteName } from \"./utils\";\nvar linkOptions = {\n  prefetch: false\n};\nexport default function CustomLink(props) {\n  var route = props.route,\n      _props$params = props.params,\n      params = _props$params === void 0 ? {} : _props$params,\n      restProps = _objectWithoutProperties(props, [\"route\", \"params\"]);\n\n  var href = getHrefByRouteName(route, params);\n  var asPath = getAsPathByRouteName(route, params);\n  return _jsx(Link, _objectSpread(_objectSpread(_objectSpread({}, restProps), linkOptions), {}, {\n    href: href,\n    as: asPath\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}